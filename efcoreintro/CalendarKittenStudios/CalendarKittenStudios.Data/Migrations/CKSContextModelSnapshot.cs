// <auto-generated />
using CalendarKittenStudios.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace CalendarKittenStudios.Data.Migrations
{
    [DbContext(typeof(CKSContext))]
    partial class CKSContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CalendarKittenStudios.Domain.Calendar", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("EndDate");

                    b.Property<DateTime>("StartDate");

                    b.Property<string>("Title");

                    b.HasKey("ID");

                    b.ToTable("Calenders");
                });

            modelBuilder.Entity("CalendarKittenStudios.Domain.CalendarPage", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CalendarID");

                    b.Property<DateTime>("EndDate");

                    b.Property<int?>("PhotographerID");

                    b.Property<DateTime>("StartDate");

                    b.Property<string>("Title");

                    b.HasKey("ID");

                    b.HasIndex("CalendarID");

                    b.HasIndex("PhotographerID");

                    b.ToTable("CalendarPage");
                });

            modelBuilder.Entity("CalendarKittenStudios.Domain.Kitten", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Born");

                    b.Property<string>("Breed");

                    b.Property<int?>("CalendarPageID");

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.HasIndex("CalendarPageID");

                    b.ToTable("Kittens");
                });

            modelBuilder.Entity("CalendarKittenStudios.Domain.Photographer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Photographers");
                });

            modelBuilder.Entity("CalendarKittenStudios.Domain.CalendarPage", b =>
                {
                    b.HasOne("CalendarKittenStudios.Domain.Calendar")
                        .WithMany("Pages")
                        .HasForeignKey("CalendarID");

                    b.HasOne("CalendarKittenStudios.Domain.Photographer", "Photographer")
                        .WithMany()
                        .HasForeignKey("PhotographerID");
                });

            modelBuilder.Entity("CalendarKittenStudios.Domain.Kitten", b =>
                {
                    b.HasOne("CalendarKittenStudios.Domain.CalendarPage")
                        .WithMany("Kittens")
                        .HasForeignKey("CalendarPageID");
                });
#pragma warning restore 612, 618
        }
    }
}
